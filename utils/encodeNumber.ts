import { Symbol } from '@/types/symbol';

const ENCODED_NUMBERS: Symbol[][][] = [
    [
        ['┌', '-', '-', '┐'],
        ['|', '┌', '┐', '|'],
        ['|', '|', '|', '|'],
        ['|', '|', '|', '|'],
        ['|', '└', '┘', '|'],
        ['└', '-', '-', '┘'],
    ],
    [
        ['┌', '-', '┐', ' '],
        ['└', '┐', '|', ' '],
        [' ', '|', '|', ' '],
        [' ', '|', '|', ' '],
        ['┌', '┘', '└', '┐'],
        ['└', '-', '-', '┘'],
    ],
    [
        ['┌', '-', '-', '┐'],
        ['└', '-', '┐', '|'],
        ['┌', '-', '┘', '|'],
        ['|', '┌', '-', '┘'],
        ['|', '└', '-', '┐'],
        ['└', '-', '-', '┘'],
    ],
    [
        ['┌', '-', '-', '┐'],
        ['└', '-', '┐', '|'],
        [' ', '┌', '┘', '|'],
        [' ', '└', '┐', '|'],
        ['┌', '-', '┘', '|'],
        ['└', '-', '-', '┘'],
    ],
    [
        ['┌', '┐', '┌', '┐'],
        ['|', '|', '|', '|'],
        ['|', '└', '┘', '|'],
        ['└', '-', '┐', '|'],
        [' ', ' ', '|', '|'],
        [' ', ' ', '└', '┘'],
    ],
    [
        ['┌', '-', '-', '┐'],
        ['|', '┌', '-', '┘'],
        ['|', '└', '-', '┐'],
        ['└', '-', '┐', '|'],
        ['┌', '-', '┘', '|'],
        ['└', '-', '-', '┘'],
    ],
    [
        ['┌', '-', '-', '┐'],
        ['|', '┌', '-', '┘'],
        ['|', '└', '-', '┐'],
        ['|', '┌', '┐', '|'],
        ['|', '└', '┘', '|'],
        ['└', '-', '-', '┘'],
    ],
    [
        ['┌', '-', '-', '┐'],
        ['└', '-', '┐', '|'],
        [' ', ' ', '|', '|'],
        [' ', ' ', '|', '|'],
        [' ', ' ', '|', '|'],
        [' ', ' ', '└', '┘'],
    ],
    [
        ['┌', '-', '-', '┐'],
        ['|', '┌', '┐', '|'],
        ['|', '└', '┘', '|'],
        ['|', '┌', '┐', '|'],
        ['|', '└', '┘', '|'],
        ['└', '-', '-', '┘'],
    ],
    [
        ['┌', '-', '-', '┐'],
        ['|', '┌', '┐', '|'],
        ['|', '└', '┘', '|'],
        ['└', '-', '┐', '|'],
        ['┌', '-', '┘', '|'],
        ['└', '-', '-', '┘'],
    ],
];

export default function encodeNumber(number: number) {
    return ENCODED_NUMBERS[number];
}
